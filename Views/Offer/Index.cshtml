@model PaginatedList<RealEstateMVC.Models.Offer>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(x => x.GetEnumerator().Current.OfferType)
            </th>
            <th>
                @Html.DisplayNameFor(x => x.GetEnumerator().Current.EstateType)
            </th>
            <th>
                @Html.DisplayNameFor(x => x.GetEnumerator().Current.Number)
            </th>
            <th>
                @Html.DisplayNameFor(x => x.GetEnumerator().Current.Area)
            </th>
            <th>
                @Html.DisplayNameFor(x => x.GetEnumerator().Current.Price)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.OfferType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EstateType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Number)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Area)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new {  id=item.OfferId  }) |
                @Html.ActionLink("Details", "Details", new {  id=item.OfferId  }) |
                @Html.ActionLink("Delete", "Delete", new {  id=item.OfferId  })
            </td>
        </tr>
}
    </tbody>
</table>
<nav>
    <ul class = "pagination">
        @if(Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" asp-controller="Offer" asp-action="Index" asp-route-page="@(Model.PageIndex - 1)" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a class="page-link" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>
        }
        @for(int i = 1; i <= Model.PageCount; ++i)
        {
            @if(i == Model.PageIndex)
            {
                <li class="page-item active">
                    <a class="page-link" asp-controller="Offer" asp-action="Index" asp-route-page="@i">
                        @i
                    </a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Offer" asp-action="Index" asp-route-page="@i">
                        @i
                    </a>
                </li>
            }
        }
        @if(Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" asp-controller="Offer" asp-action="Index" asp-route-page="@(Model.PageIndex + 1)" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a class="page-link" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
        }
    </ul>
</nav>
